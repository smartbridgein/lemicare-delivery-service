# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
server:
  # A unique port for the delivery-service.
  port: 8085

# ===================================================================
# CORE SPRING APPLICATION CONFIGURATION
# ===================================================================
spring:
  application:
    name: delivery-service

  # ===================================================================
  # SECURITY CONFIGURATION (OAUTH2 RESOURCE SERVER)
  # ===================================================================
  # This configures how the service validates incoming JWTs.
  security:
    oauth2:
      resourceserver:
        jwt:
          # VALIDATION RULE 1: The 'iss' (issuer) claim in the JWT must match this.
          # It must be identical to 'app.jwt.issuer' in your auth-service.
          issuer: "https://smartbridgein.com" # Standardized issuer

          # VALIDATION RULE 2: The JWT's signature must be valid against this secret key.
          # It must be identical to 'app.jwt.secret-key' in your auth-service.
          # In production, this MUST be loaded from an environment variable.
          secret-key: "YourSuperStrongAndLongSecretKeyForHmacShaAlgorithmsAtLeast256Bits"

          audience: "MS"

# ===================================================================
# PARTNER & EXTERNAL API CONFIGURATION
# ===================================================================
shiprocket:
  api:
    base-url: "https://apiv2.shiprocket.in"
    # SECRETS are now correctly read from environment variables.
    # The value after the colon ':' is a fallback for local development only.
    #email: "${SHIPROCKET_EMAIL:your-dev-email@example.com}"
   # password: "${SHIPROCKET_PASSWORD:your-dev-password}"
    email: moyyappa@gmail.com
    password: xLB7sOzV#%Vd$b9q
    webhook-secret: "123456"
    auth-token-cache-expiry-minutes: 55 # Optional, default is 55

  logging:
    level:
      com.lemicare.delivery.service.client.ShiprocketApiClient: DEBUG


# ===================================================================
# DOWNSTREAM MICROSERVICE URLS (For Feign Clients)
# ===================================================================
# This section is now at the root level, not nested under 'shiprocket'.
services:
  # The base URL for the organization-service, pointing to the API Gateway.
  organization:
    url: "https://auth-service-511338430385.asia-south1.run.app"
    #url: "http://localhost:8081" # Points to the API Gateway

  # The base URL for the order-service (e.g., storefront-service).
  order:
    url: "https://lemicare-cms-service-511338430385.asia-south1.run.app"
    #url: "http://localhost:8086" # Also points to the API Gateway

# ===================================================================
# CUSTOM APPLICATION PROPERTIES
# ===================================================================
app:
  firebase:
    # Path to the service account key for Firestore access.
    service-account-path: "google-services.json"

# ===================================================================
# ACTUATOR / MANAGEMENT ENDPOINTS
# ===================================================================
management:
  endpoints:
    web:
      exposure:
        include: "health,info"